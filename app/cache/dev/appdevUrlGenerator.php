<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Symfony\Component\HttpKernel\Log\LoggerInterface;

/**
 * appdevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appdevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    static private $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ProfilerController::toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ProfilerController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ProfilerController::purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ProfilerController::infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),),
        '_profiler_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ProfilerController::importAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/import',    ),  ),),
        '_profiler_export' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ProfilerController::exportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.txt',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]+',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler/export',    ),  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ProfilerController::phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ProfilerController::searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\WebProfilerBundle\\Controller\\ProfilerController::panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),),
        '_profiler_redirect' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::redirectAction',    'route' => '_profiler_search_results',    'token' => 'empty',    'ip' => '',    'url' => '',    'method' => '',    'limit' => '10',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),),
        'article' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ArticleController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/article/',    ),  ),),
        'article_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ArticleController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/article',    ),  ),),
        'article_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ArticleController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/article/new',    ),  ),),
        'article_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ArticleController::createAction',    '_method' => 'post',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/article/create',    ),  ),),
        'article_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ArticleController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/article',    ),  ),),
        'article_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ArticleController::updateAction',    '_method' => 'post',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/article',    ),  ),),
        'article_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ArticleController::deleteAction',    '_method' => 'post',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/article',    ),  ),),
        'article_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ArticleController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/article/search',    ),  ),),
        'stock_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\StockController::newStockAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/stock/new_stock',    ),  ),),
        'stock_add' => array (  0 =>   array (    0 => 'id_article',    1 => 'ajax',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\StockController::addStockAction',    '_method' => 'post',    'ajax' => false,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'ajax',    ),    1 =>     array (      0 => 'text',      1 => '/add_stock',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id_article',    ),    3 =>     array (      0 => 'text',      1 => '/stock',    ),  ),),
        'stock_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\StockController::createStockAction',    '_method' => 'post',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/stock/create_stock',    ),  ),),
        'facture' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FacturationController::indexFactureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/facture/',    ),  ),),
        'facture_show' => array (  0 =>   array (    0 => 'id',    1 => 'pdf',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FacturationController::showFactureAction',    'pdf' => '0',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'pdf',    ),    1 =>     array (      0 => 'text',      1 => '/show',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/facture',    ),  ),),
        'facture_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FacturationController::newFactureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/facture/new',    ),  ),),
        'facture_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FacturationController::editFactureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/facture',    ),  ),),
        'facture_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FacturationController::deleteFactureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/facture',    ),  ),),
        'facture_commit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FacturationController::commitFactureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/commit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/facture',    ),  ),),
        'facture_article_search' => array (  0 =>   array (    0 => 'id_facture',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FacturationController::searchArticleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/articleSearch',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id_facture',    ),    2 =>     array (      0 => 'text',      1 => '/facture',    ),  ),),
        'facture_client_search' => array (  0 =>   array (    0 => 'id_facture',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FacturationController::searchClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clientSearch',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id_facture',    ),    2 =>     array (      0 => 'text',      1 => '/facture',    ),  ),),
        'facture_update_total' => array (  0 =>   array (    0 => 'id_facture',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FacturationController::updateFactureTotalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/updateTotal',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id_facture',    ),    2 =>     array (      0 => 'text',      1 => '/facture',    ),  ),),
        'facturation_article_add' => array (  0 =>   array (    0 => 'id_facture',    1 => 'id_article',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FacturationController::addArticleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id_article',    ),    1 =>     array (      0 => 'text',      1 => '/article_add',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id_facture',    ),    3 =>     array (      0 => 'text',      1 => '/facture',    ),  ),),
        'facturation_client_add' => array (  0 =>   array (    0 => 'id_facture',    1 => 'id_client',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FacturationController::addClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id_client',    ),    1 =>     array (      0 => 'text',      1 => '/client_add',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id_facture',    ),    3 =>     array (      0 => 'text',      1 => '/facture',    ),  ),),
        'facture_article_update_quantite' => array (  0 =>   array (    0 => 'id_fact_article',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FacturationController::updateArticleQuantiteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id_fact_article',    ),    2 =>     array (      0 => 'text',      1 => '/facture',    ),  ),),
        'facture_article_remove' => array (  0 =>   array (    0 => 'id_fact_article',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FacturationController::removeArticleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/removeArticle',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id_fact_article',    ),    2 =>     array (      0 => 'text',      1 => '/facture',    ),  ),),
        'facture_client_new' => array (  0 =>   array (    0 => 'id_facture',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FacturationController::newClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/newClient',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id_facture',    ),    2 =>     array (      0 => 'text',      1 => '/facture',    ),  ),),
        'client' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ClientController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/',    ),  ),),
        'client_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ClientController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/client',    ),  ),),
        'client_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ClientController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/new',    ),  ),),
        'client_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ClientController::createAction',    '_method' => 'post',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/create',    ),  ),),
        'client_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ClientController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/client',    ),  ),),
        'client_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ClientController::updateAction',    '_method' => 'post',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/client',    ),  ),),
        'client_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\ClientController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/client',    ),  ),),
        'fournisseur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FournisseurController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fournisseur/',    ),  ),),
        'fournisseur_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FournisseurController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/fournisseur',    ),  ),),
        'fournisseur_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FournisseurController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fournisseur/new',    ),  ),),
        'fournisseur_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FournisseurController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fournisseur/create',    ),  ),),
        'fournisseur_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FournisseurController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/fournisseur',    ),  ),),
        'fournisseur_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FournisseurController::updateAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/fournisseur',    ),  ),),
        'fournisseur_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Boutique\\GestionStockBundle\\Controller\\FournisseurController::deleteAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/fournisseur',    ),  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $absolute = false)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Route "%s" does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $absolute);
    }
}
